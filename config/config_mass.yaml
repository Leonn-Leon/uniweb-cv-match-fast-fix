general:
  mode: "prod"
model:
  stage_1:
    date_threshold: "2025-02-02"
    close_dist_threshold: 10
    text_features:
      - "Категория прав"
      - "Адрес"
    cluster_match_features:
      - "Переезд"
      - "Адрес"
      - "date"
      - "embedding"
    weights: [0.0, 0.5, 1, 1]
    first_filter: 300
    top_n_init: 100
    top_n: 30
  stage_2:
    score_threshold: 0.5
    keys_vacancy:
      - "Должность"
      - "Должность категория"
      - "Должность подкатегория"
      - "Профессиональная область"
      - "Список навыков"
      - "Навыки"
      - "Опыт работы"
      - "Образование"
      - "Условия работы"
      - "Зарплата"
      - "Описание"
    model_name: "gpt-4o-2024-11-20"
    model_name_embed: "text-embedding-3-large"
    category_desc:
      Навыки: |
        Проанализируй текст и извлеки единый список, включающий:
        1) Ключевые профессиональные НАВЫКИ и УМЕНИЯ (практические способности).
        2) Области ЗНАНИЙ, ТЕХНОЛОГИИ, ИНСТРУМЕНТЫ (теоретическая база).
        3) Основные рабочие ЗАДАЧИ, ФУНКЦИИ и ОБЯЗАННОСТИ (компетенции).
        Укажи все релевантные пункты, найденные в тексте. Объедини их.
      Опыт работы: "Опыт работы - информация о количестве лет работы и занимаемых позициях."
      Условия работы: "Условия работы - информация о условиях работы и бонусах."
      Зарплата: "Зарплата - количество денег, которое предлагают кандидату, или кандидат ожидает."
      Образование: "Какой уровень образования (например, высшее, среднее специальное) и какая специальность/направление указаны в тексте?"
      График работы: "Какой график работы (например, полный день, 5/2, сменный, гибкий, вахта) указан в тексте?"
      Адрес: "Какой адрес указан в тексте? Извлеки его в формате 'Страна, Область, Город', по возможности убирая типы населенных пунктов (например, 'г.', 'село', 'поселок'). Если указан только город или регион, верни то, что есть."
      Категория прав: |
        Твоя задача: Проанализируй текст и извлеки ВСЕ категории водительских прав ИЛИ удостоверения тракториста-машиниста, которые:
        1) Явно упомянуты в тексте (например, "есть права B, C", "категория A3").
        2) Однозначно ПОДРАЗУМЕВАЮТСЯ опытом работы, даже если сама категория не написана.
        ИСПОЛЬЗУЙ ЭТУ СПРАВОЧНУЮ ИНФОРМАЦИЮ для выводов из описания:
        *   Категория А1: Мотовездеходы, снегоходы.
        *   Категория А2: Внедорожники до 3.5т (например, ТРЭКОЛ).
        *   Категория А3: Тяжелые внедорожные самосвалы > 3.5т (например, БелАЗ, Caterpillar 777, Komatsu HD). Опыт работы как 'водитель карьерного самосвала', 'машинист самосвала (карьерного)', 'водитель БелАЗа' это обязательно - A3.
        *   Категория А4: Внедорожные автобусы > 8 мест (вахтовки).
        *   Категория B: Легковые автомобили, малые грузовики до 3.5т.
        *   Категория C: Грузовики > 3.5т (КамАЗ, МАЗ и т.п.). Опыт 'водитель грузовика', 'дальнобойщик' НЕ САМОСВАЛ.
        *   Категория D: Автобусы > 8 мест. Опыт 'водитель автобуса'.
        *   Категория E (к B, C, D): Прицепы к соответствующим категориям (BE, CE, DE). Опыт 'водитель автопоезда', 'фура с прицепом'.
        *   Категория F: Самоходные сельхозмашины (комбайны, тракторы).
        ПРАВИЛА ВЫВОДА:
        - Если категория упомянута явно - включай ее.
        - Категория А обязательно должна быть с цифрой A4, А3 А2 или А1, любой формат категории А должен быть выведен с арабской цифрой.
        - Если опыт ОДНОЗНАЧНО указывает на категорию (см. справку), а она не упомянута явно - ДОБАВЬ эту категорию.
        - Если опыт неоднозначен (например, просто 'водитель', 'работал на погрузчике' без уточнения типа) - НЕ ДОБАВЛЯЙ категорию на основе этого опыта.
        - Объедини все найденные и выведенные категории, убери дубликаты.

    cats_find_vacancy: []
    cats_find_cv:
      - "Навыки"
      - "Категория прав"
    prompt_experience: "Сделай краткое содержание опыта работы по данным в json.\njson:\n"
    prompt_info: "Описание:\n[description]\nВопрос: [question]\nОтвет:"
    question_vac: "Какие требования к категории '[query]' указаны в описании вакансии?"
    question_cv:  "Какие [query] указаны в описании кандидата на вакансию?"
    system_prompt_info: |
      Вы эксперт в найме персонала. Необходимо извлечь необходимые [query] из описания. После этого
      необходимо убрать пересечение с данными для удаления, если такие данные переданы.
      Затем вернуть результа как отдельное поле в json с ключом '[query]'.
      Не нужно придумывать того, чего нет в описании. Если релевантных данных нет, то необходимо
      вернуть значение 'Нет данных' для ключа '[query]'.
    request_num_workers: 8
    keys_cv:
      - "Должность"
      - "Должность категория"
      - "Должность подкатегория"
      - "Профессиональная область"
      - "Список навыков"
      - "Навыки"
      - "Зарплата"
      - "Образование"
      - "Опыт работы"
      - "Условия работы"
      - "Описание"
    top_n: 10
    prompt_matching: "Оцени, насколько кандидат подходит на ваканчию по соответсвию данных характеристик.\nОписание кандидата:"
    system_prompt_matching: |
      Сравни характеристику из ВАКАНСИИ (ниже) с характеристикой КАНДИДАТА (текст в угловых скобках <> в следующем сообщении). Оцени степень соответствия (match_score) от 0.0 до 1.0.
      ПРАВИЛА:
      - 1.0: Кандидат полностью соответствует или превосходит требование вакансии.
      - 0.0: Кандидат не соответствует требованию, ИЛИ у кандидата указано "Нет данных" / "Не указано" (внутри <>), а вакансия явно что-то требует.
      - Если вакансия НЕ УКАЗЫВАЕТ требование ("Нет данных", "Не важно") -> score = 0.9.
      - Если у ОБОИХ "Нет данных" (и в вакансии, и внутри <>) -> score = 0.3.
      - Для частичных совпадений используй промежуточные значения (0.1-0.8).
      - Если у "Графика работы", "Тип занятости" и "Категория прав" какие-то данные пересекаются то score = 1.0
      ОТВЕТ: Только JSON вида {"match_score": ЧИСЛО}. Без пояснений.
      Описание ВАКАНСИИ (для одной характеристики):
    feats_match:
      - Навыки
    feats_match_prompt:
      - Опыт работы
      - Образование
      - Тип занятости
      - График работы
      - Категория прав
      - Должность
    ranking_features:
      - Должность
      - Адрес
      - Переезд
      - Образование
      - Опыт работы
      - Навыки
      - Тип занятости
      - График работы
      - Категория прав
    sim_scores_names: []
    weights: [9.0, 9.0, 2.0, 1.5, 1.5, 1.5, 0.5, 0.5, 2.0, 3.0]
